# This is a basic workflow to help you get started with Actions

name: Automated Updates

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the main branch
on:
  schedule:
    - cron: "0 0 * * SUN"
  workflow_dispatch: # So we can manually trigger it from the Actions page.
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      # Copied and inspired from GitHub Actions "Cache" example.
      - uses: actions/checkout@v2
      - name: Determine npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Restore npm cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install
        run: npm install

      - name: Check for updates and run
        id: update
        run: |
          npx ng update --all
          echo ${{ toJson(steps.update.outputs) }}

      - uses: tibdex/github-app-token@v1
        id: generate-token
        with:
          app_id: ${{ secrets.GHA_ID }}
          private_key: ${{ secrets.GHA_AUTOMATION }}
      - name: Set current date/week information
        id: date
        run: echo "::set-output name=week::$(date +%V)"

      - name: Create branch and make pull request on changes
        id: create-pr
        uses: peter-evans/create-pull-request@v3
        with:
          token: ${{ steps.generate-token.outputs.token }}
          branch: "ng-update-week-${{ steps.date.outputs.week }}"
          commit-message: "chore(ng-update): Automatic updates from week ${{ steps.date.outputs.week }}"
          title: "Automatic updates from week ${{ steps.date.outputs.week }}"
          labels: updates, angular
      - name: Slack notification
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_USERNAME: PR-bot # Optional. (defaults to webhook app)
          SLACK_AVATAR: repository # Optional. can be (repository, sender, an URL) (defaults to webhook app avatar)
        uses: Ilshidur/action-slack@2.0.2
        with:
          args: "An automatic update has resulted in a Pull Request. https://github.com/Bjeaurn/automating-updates/pull/${{ steps.create-pr.outputs.pull-request-number }}" # Optional
